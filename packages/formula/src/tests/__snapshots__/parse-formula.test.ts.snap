// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`parse formula test ADD(1, ADD(2, {{ field1 }})) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "arguments": [
        {
          "type": "number",
          "value": 2,
        },
        {
          "type": "variable",
          "value": "{{field1}}",
          "variable": "field1",
        },
      ],
      "name": "ADD",
      "returnType": "number",
      "type": "functionCall",
      "value": "ADD(2,{{field1}})",
    },
  ],
  "name": "ADD",
  "returnType": "number",
  "type": "functionCall",
  "value": "ADD(1,ADD(2,{{field1}}))",
}
`;

exports[`parse formula test ADD(1, 2) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
  ],
  "name": "ADD",
  "returnType": "number",
  "type": "functionCall",
  "value": "ADD(1,2)",
}
`;

exports[`parse formula test SUBTRACT(1, 2) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
  ],
  "name": "SUBTRACT",
  "returnType": "number",
  "type": "functionCall",
  "value": "SUBTRACT(1,2)",
}
`;

exports[`parse formula test MULTIPLY(1, 2) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
  ],
  "name": "MULTIPLY",
  "returnType": "number",
  "type": "functionCall",
  "value": "MULTIPLY(1,2)",
}
`;

exports[`parse formula test DIVIDE(1, 2) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
  ],
  "name": "DIVIDE",
  "returnType": "number",
  "type": "functionCall",
  "value": "DIVIDE(1,2)",
}
`;

exports[`parse formula test 1 - 1 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 1,
    },
  ],
  "name": "-",
  "returnType": "number",
  "type": "functionCall",
  "value": "1-1",
}
`;

exports[`parse formula test 1 * 1 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 1,
    },
  ],
  "name": "*",
  "returnType": "number",
  "type": "functionCall",
  "value": "1*1",
}
`;

exports[`parse formula test 1 / 1 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 1,
    },
  ],
  "name": "/",
  "returnType": "number",
  "type": "functionCall",
  "value": "1/1",
}
`;

exports[`parse formula test SUBTRACT(1, 2) + MULTIPLY(3, 4) 1`] = `
{
  "arguments": [
    {
      "arguments": [
        {
          "type": "number",
          "value": 1,
        },
        {
          "type": "number",
          "value": 2,
        },
      ],
      "name": "SUBTRACT",
      "returnType": "number",
      "type": "functionCall",
      "value": "SUBTRACT(1,2)",
    },
    {
      "arguments": [
        {
          "type": "number",
          "value": 3,
        },
        {
          "type": "number",
          "value": 4,
        },
      ],
      "name": "MULTIPLY",
      "returnType": "number",
      "type": "functionCall",
      "value": "MULTIPLY(3,4)",
    },
  ],
  "name": "+",
  "returnType": "number",
  "type": "functionCall",
  "value": "SUBTRACT(1,2)+MULTIPLY(3,4)",
}
`;

exports[`parse formula test 1 1`] = `
{
  "type": "number",
  "value": 1,
}
`;

exports[`parse formula test {{field1}} 1`] = `
{
  "type": "variable",
  "value": "{{field1}}",
  "variable": "field1",
}
`;

exports[`parse formula test 1 + 1 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 1,
    },
  ],
  "name": "+",
  "returnType": "number",
  "type": "functionCall",
  "value": "1+1",
}
`;

exports[`parse formula test {{field1}} + {{field2}} 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "+",
  "returnType": "number",
  "type": "functionCall",
  "value": "{{field1}}+{{field2}}",
}
`;

exports[`parse formula test SUM({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "SUM",
  "returnType": "number",
  "type": "functionCall",
  "value": "SUM({{field1}},{{field2}})",
}
`;

exports[`parse formula test CONCAT({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "CONCAT",
  "returnType": "string",
  "type": "functionCall",
  "value": "CONCAT({{field1}},{{field2}})",
}
`;

exports[`parse formula test CONCAT({{field1}}, {{field2}}, {{field3}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
    {
      "type": "variable",
      "value": "{{field3}}",
      "variable": "field3",
    },
  ],
  "name": "CONCAT",
  "returnType": "string",
  "type": "functionCall",
  "value": "CONCAT({{field1}},{{field2}},{{field3}})",
}
`;

exports[`parse formula test MOD(1, 2) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
  ],
  "name": "MOD",
  "returnType": "number",
  "type": "functionCall",
  "value": "MOD(1,2)",
}
`;

exports[`parse formula test MOD({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "MOD",
  "returnType": "number",
  "type": "functionCall",
  "value": "MOD({{field1}},{{field2}})",
}
`;

exports[`parse formula test POWER(2, 3) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 2,
    },
    {
      "type": "number",
      "value": 3,
    },
  ],
  "name": "POWER",
  "returnType": "number",
  "type": "functionCall",
  "value": "POWER(2,3)",
}
`;

exports[`parse formula test POWER({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "POWER",
  "returnType": "number",
  "type": "functionCall",
  "value": "POWER({{field1}},{{field2}})",
}
`;

exports[`parse formula test SQRT(4) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 4,
    },
  ],
  "name": "SQRT",
  "returnType": "number",
  "type": "functionCall",
  "value": "SQRT(4)",
}
`;

exports[`parse formula test SQRT({{field1}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
  ],
  "name": "SQRT",
  "returnType": "number",
  "type": "functionCall",
  "value": "SQRT({{field1}})",
}
`;

exports[`parse formula test ABS(-5) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 5,
    },
  ],
  "name": "ABS",
  "returnType": "number",
  "type": "functionCall",
  "value": "ABS(-5)",
}
`;

exports[`parse formula test ABS({{field1}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
  ],
  "name": "ABS",
  "returnType": "number",
  "type": "functionCall",
  "value": "ABS({{field1}})",
}
`;

exports[`parse formula test ROUND(1.234) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1.234,
    },
  ],
  "name": "ROUND",
  "returnType": "number",
  "type": "functionCall",
  "value": "ROUND(1.234)",
}
`;

exports[`parse formula test ROUND({{field1}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
  ],
  "name": "ROUND",
  "returnType": "number",
  "type": "functionCall",
  "value": "ROUND({{field1}})",
}
`;

exports[`parse formula test FLOOR(1.234) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1.234,
    },
  ],
  "name": "FLOOR",
  "returnType": "number",
  "type": "functionCall",
  "value": "FLOOR(1.234)",
}
`;

exports[`parse formula test FLOOR({{field1}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
  ],
  "name": "FLOOR",
  "returnType": "number",
  "type": "functionCall",
  "value": "FLOOR({{field1}})",
}
`;

exports[`parse formula test CEILING(1.234) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1.234,
    },
  ],
  "name": "CEILING",
  "returnType": "number",
  "type": "functionCall",
  "value": "CEILING(1.234)",
}
`;

exports[`parse formula test CEILING({{field1}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
  ],
  "name": "CEILING",
  "returnType": "number",
  "type": "functionCall",
  "value": "CEILING({{field1}})",
}
`;

exports[`parse formula test MIN(1, 2) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
  ],
  "name": "MIN",
  "returnType": "number",
  "type": "functionCall",
  "value": "MIN(1,2)",
}
`;

exports[`parse formula test MIN({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "MIN",
  "returnType": "number",
  "type": "functionCall",
  "value": "MIN({{field1}},{{field2}})",
}
`;

exports[`parse formula test MIN({{field1}}, {{field2}}, {{field3}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
    {
      "type": "variable",
      "value": "{{field3}}",
      "variable": "field3",
    },
  ],
  "name": "MIN",
  "returnType": "number",
  "type": "functionCall",
  "value": "MIN({{field1}},{{field2}},{{field3}})",
}
`;

exports[`parse formula test MAX(1, 2) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
  ],
  "name": "MAX",
  "returnType": "number",
  "type": "functionCall",
  "value": "MAX(1,2)",
}
`;

exports[`parse formula test MAX({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "MAX",
  "returnType": "number",
  "type": "functionCall",
  "value": "MAX({{field1}},{{field2}})",
}
`;

exports[`parse formula test MAX({{field1}}, {{field2}}, {{field3}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
    {
      "type": "variable",
      "value": "{{field3}}",
      "variable": "field3",
    },
  ],
  "name": "MAX",
  "returnType": "number",
  "type": "functionCall",
  "value": "MAX({{field1}},{{field2}},{{field3}})",
}
`;

exports[`parse formula test AVERAGE(1, 2, 3) 1`] = `
{
  "arguments": [
    {
      "type": "number",
      "value": 1,
    },
    {
      "type": "number",
      "value": 2,
    },
    {
      "type": "number",
      "value": 3,
    },
  ],
  "name": "AVERAGE",
  "returnType": "number",
  "type": "functionCall",
  "value": "AVERAGE(1,2,3)",
}
`;

exports[`parse formula test AVERAGE({{field1}}, {{field2}}, {{field3}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
    {
      "type": "variable",
      "value": "{{field3}}",
      "variable": "field3",
    },
  ],
  "name": "AVERAGE",
  "returnType": "number",
  "type": "functionCall",
  "value": "AVERAGE({{field1}},{{field2}},{{field3}})",
}
`;

exports[`parse formula test CONCAT({{field1}}, {{field2}}) 2`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "CONCAT",
  "returnType": "string",
  "type": "functionCall",
  "value": "CONCAT({{field1}},{{field2}})",
}
`;

exports[`parse formula test CONCAT({{field1}}, {{field2}}, {{field3}}) 2`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
    {
      "type": "variable",
      "value": "{{field3}}",
      "variable": "field3",
    },
  ],
  "name": "CONCAT",
  "returnType": "string",
  "type": "functionCall",
  "value": "CONCAT({{field1}},{{field2}},{{field3}})",
}
`;

exports[`parse formula test LEFT({{field1}}, 3) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "number",
      "value": 3,
    },
  ],
  "name": "LEFT",
  "returnType": "string",
  "type": "functionCall",
  "value": "LEFT({{field1}},3)",
}
`;

exports[`parse formula test RIGHT({{field1}}, 3) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "number",
      "value": 3,
    },
  ],
  "name": "RIGHT",
  "returnType": "string",
  "type": "functionCall",
  "value": "RIGHT({{field1}},3)",
}
`;

exports[`parse formula test MID({{field1}}, 2, 3) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "number",
      "value": 2,
    },
    {
      "type": "number",
      "value": 3,
    },
  ],
  "name": "MID",
  "returnType": "string",
  "type": "functionCall",
  "value": "MID({{field1}},2,3)",
}
`;

exports[`parse formula test NOT ({{field1}} > {{field2}}) 1`] = `
{
  "arguments": [
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field1}}",
          "variable": "field1",
        },
        {
          "type": "variable",
          "value": "{{field2}}",
          "variable": "field2",
        },
      ],
      "name": ">",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field1}}>{{field2}}",
    },
  ],
  "name": "NOT",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "NOT({{field1}}>{{field2}})",
}
`;

exports[`parse formula test ({{field1}} > {{field2}}) AND ({{field2}} > {{field3}}) 1`] = `
{
  "arguments": [
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field1}}",
          "variable": "field1",
        },
        {
          "type": "variable",
          "value": "{{field2}}",
          "variable": "field2",
        },
      ],
      "name": ">",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field1}}>{{field2}}",
    },
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field2}}",
          "variable": "field2",
        },
        {
          "type": "variable",
          "value": "{{field3}}",
          "variable": "field3",
        },
      ],
      "name": ">",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field2}}>{{field3}}",
    },
  ],
  "name": "AND",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "({{field1}}>{{field2}})AND({{field2}}>{{field3}})",
}
`;

exports[`parse formula test ({{field1}} > {{field2}}) OR ({{field2}} > {{field3}}) 1`] = `
{
  "arguments": [
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field1}}",
          "variable": "field1",
        },
        {
          "type": "variable",
          "value": "{{field2}}",
          "variable": "field2",
        },
      ],
      "name": ">",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field1}}>{{field2}}",
    },
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field2}}",
          "variable": "field2",
        },
        {
          "type": "variable",
          "value": "{{field3}}",
          "variable": "field3",
        },
      ],
      "name": ">",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field2}}>{{field3}}",
    },
  ],
  "name": "OR",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "({{field1}}>{{field2}})OR({{field2}}>{{field3}})",
}
`;

exports[`parse formula test {{field1}} = {{field2}} 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "=",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "{{field1}}={{field2}}",
}
`;

exports[`parse formula test {{field1}} != {{field2}} 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "!=",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "{{field1}}!={{field2}}",
}
`;

exports[`parse formula test {{field1}} >= {{field2}} 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": ">=",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "{{field1}}>={{field2}}",
}
`;

exports[`parse formula test {{field1}} <= {{field2}} 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "<=",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "{{field1}}<={{field2}}",
}
`;

exports[`parse formula test {{field1}} < {{field2}} 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "<",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "{{field1}}<{{field2}}",
}
`;

exports[`parse formula test {{field1}} > 1 AND {{field2}} < 2 1`] = `
{
  "arguments": [
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field1}}",
          "variable": "field1",
        },
        {
          "type": "number",
          "value": 1,
        },
      ],
      "name": ">",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field1}}>1",
    },
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field2}}",
          "variable": "field2",
        },
        {
          "type": "number",
          "value": 2,
        },
      ],
      "name": "<",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field2}}<2",
    },
  ],
  "name": "AND",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "{{field1}}>1AND{{field2}}<2",
}
`;

exports[`parse formula test {{field1}} > 1 OR {{field2}} < 2 1`] = `
{
  "arguments": [
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field1}}",
          "variable": "field1",
        },
        {
          "type": "number",
          "value": 1,
        },
      ],
      "name": ">",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field1}}>1",
    },
    {
      "arguments": [
        {
          "type": "variable",
          "value": "{{field2}}",
          "variable": "field2",
        },
        {
          "type": "number",
          "value": 2,
        },
      ],
      "name": "<",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field2}}<2",
    },
  ],
  "name": "OR",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "{{field1}}>1OR{{field2}}<2",
}
`;

exports[`parse formula test NOT ({{field1}} > 1 AND {{field2}} < 2) 1`] = `
{
  "arguments": [
    {
      "arguments": [
        {
          "arguments": [
            {
              "type": "variable",
              "value": "{{field1}}",
              "variable": "field1",
            },
            {
              "type": "number",
              "value": 1,
            },
          ],
          "name": ">",
          "returnType": "boolean",
          "type": "functionCall",
          "value": "{{field1}}>1",
        },
        {
          "arguments": [
            {
              "type": "variable",
              "value": "{{field2}}",
              "variable": "field2",
            },
            {
              "type": "number",
              "value": 2,
            },
          ],
          "name": "<",
          "returnType": "boolean",
          "type": "functionCall",
          "value": "{{field2}}<2",
        },
      ],
      "name": "AND",
      "returnType": "boolean",
      "type": "functionCall",
      "value": "{{field1}}>1AND{{field2}}<2",
    },
  ],
  "name": "NOT",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "NOT({{field1}}>1AND{{field2}}<2)",
}
`;

exports[`parse formula test SEARCH({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "SEARCH",
  "returnType": "number",
  "type": "functionCall",
  "value": "SEARCH({{field1}},{{field2}})",
}
`;

exports[`parse formula test REPLACE({{field1}}, {{field2}}, {{field3}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
    {
      "type": "variable",
      "value": "{{field3}}",
      "variable": "field3",
    },
  ],
  "name": "REPLACE",
  "returnType": "string",
  "type": "functionCall",
  "value": "REPLACE({{field1}},{{field2}},{{field3}})",
}
`;

exports[`parse formula test REPEAT({{field1}}, {{field2}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
  ],
  "name": "REPEAT",
  "returnType": "string",
  "type": "functionCall",
  "value": "REPEAT({{field1}},{{field2}})",
}
`;

exports[`parse formula test LEN({{field1}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
  ],
  "name": "LEN",
  "returnType": "number",
  "type": "functionCall",
  "value": "LEN({{field1}})",
}
`;

exports[`parse formula test SUBSTR({{field1}}, {{field2}}, {{field3}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
    {
      "type": "variable",
      "value": "{{field2}}",
      "variable": "field2",
    },
    {
      "type": "variable",
      "value": "{{field3}}",
      "variable": "field3",
    },
  ],
  "name": "SUBSTR",
  "returnType": "string",
  "type": "functionCall",
  "value": "SUBSTR({{field1}},{{field2}},{{field3}})",
}
`;

exports[`parse formula test AND({{field1}}, {{field2}}) 1`] = `
{
  "type": "variable",
  "value": "{{field1}}",
  "variable": "field1",
}
`;

exports[`parse formula test OR({{field1}}, {{field2}}) 1`] = `
{
  "type": "variable",
  "value": "{{field1}}",
  "variable": "field1",
}
`;

exports[`parse formula test NOT({{field1}}) 1`] = `
{
  "arguments": [
    {
      "type": "variable",
      "value": "{{field1}}",
      "variable": "field1",
    },
  ],
  "name": "NOT",
  "returnType": "boolean",
  "type": "functionCall",
  "value": "NOT({{field1}})",
}
`;
